<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
	http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
	version="1.0">
	<persistence-unit name="jpa-mysql">
		<!-- The provider only needs to be set if you use several JPA providers -->
        <!--<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>-->
        
		<!-- This is required to be spec compliant, Hibernate however supports
			auto-detection even in JSE. <class>org.t0tec.tutorials.jmp.Driver</class> -->

		<properties>
			<!-- Scan for annotated classes and Hibernate mapping XML files -->
			<property name="hibernate.archive.autodetection" value="class" />
			<!-- SQL stdout logging -->
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="true" />
			<property name="use_sql_comments" value="true" />

            <property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
            <property name="hibernate.connection.url" value="jdbc:mysql://localhost:3306/test" />
            <property name="hibernate.connection.username" value="root" />
            <property name="hibernate.connection.password" value="root" />
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect" />

            <!-- Use the HikeriCP connection pool provider -->
            <property name="hibernate.connection.provider_class" value="com.zaxxer.hikari.hibernate.HikariConnectionProvider" />
            <property name="hibernate.hikari.minimumPoolSize" value="5" />
            <property name="hibernate.hikari.maximumPoolSize" value="20" />
            <property name="hibernate.hikari.idleTimeout" value="30000" />
            <property name="hibernate.hikari.dataSource.url" value="jdbc:mysql://localhost:3306/test" />
            <property name="hibernate.hikari.dataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" />

			<!-- Drop and re-create the database schema on startup -->
			<property name="hibernate.hbm2ddl.auto" value="create" />
		</properties>
	</persistence-unit>

    <persistence-unit name="jpa-postgresql">
        <!-- This is required to be spec compliant, Hibernate however supports
            auto-detection even in JSE. <class>org.t0tec.tutorials.jmp.Driver</class> -->

        <properties>
            <!-- Scan for annotated classes and Hibernate mapping XML files -->
            <property name="hibernate.archive.autodetection" value="class" />
            <!-- SQL stdout logging -->
            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="true" />
            <property name="use_sql_comments" value="true" />

            <property name="hibernate.connection.driver_class" value="org.postgresql.Driver" />
            <property name="hibernate.connection.url" value="jdbc:postgresql://localhost:5432/test" />
            <property name="hibernate.connection.username" value="postgres" />
            <property name="hibernate.connection.password" value="postgres" />
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL9Dialect" />

            <!-- Use the HikeriCP connection pool provider -->
            <property name="hibernate.connection.provider_class" value="com.zaxxer.hikari.hibernate.HikariConnectionProvider" />
            <property name="hibernate.hikari.minimumPoolSize" value="5" />
            <property name="hibernate.hikari.maximumPoolSize" value="20" />
            <property name="hibernate.hikari.idleTimeout" value="30000" />
            <property name="hibernate.hikari.dataSource.url" value="jdbc:postgresql://localhost:5432/test" />
            <property name="hibernate.hikari.dataSourceClassName" value="org.postgresql.ds.PGSimpleDataSource" />

            <!-- Drop and re-create the database schema on startup -->
            <property name="hibernate.hbm2ddl.auto" value="create" />
        </properties>
    </persistence-unit>
</persistence>
